import os
from flask import Flask, render_template, request
from werkzeug.utils import secure_filename
import onnxruntime as ort
from utils.inference import visualize_single_prediction
import cv2

UPLOAD_FOLDER = 'static/uploads'
RESULT_FOLDER = 'static/results'

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
app.config['RESULT_FOLDER'] = RESULT_FOLDER

session = ort.InferenceSession("model/best_model.onnx", providers=["CPUExecutionProvider"])

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        files = request.files.getlist("files")
        results = []
        for file in files:
            if file:
                filename = secure_filename(file.filename)
                file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
                file.save(file_path)

                img_str, mask = visualize_single_prediction(session, file_path)

                # Save mask for download
                mask_save_path = os.path.join(app.config['RESULT_FOLDER'], f"{os.path.splitext(filename)[0]}_mask.png")
                cv2.imwrite(mask_save_path, (mask * 255).astype('uint8'))

                results.append({"name": filename, "image": img_str, "mask_path": mask_save_path})
        return render_template('result.html', results=results)
    return render_template('index.html')

@app.route('/result')
def result():
    return render_template('result.html', results=[])

if __name__ == "__main__":
    os.makedirs(UPLOAD_FOLDER, exist_ok=True)
    os.makedirs(RESULT_FOLDER, exist_ok=True)
    app.run(debug=True)
